{"version":3,"sources":["redux/index.js","sagas/index.js","components/Calculator.js","components/Submissions.js","components/App.js","index.js"],"names":["rootReducer","combineReducers","resultReducer","state","arguments","length","undefined","action","type","payload","catchDispatch","getResults","submit","rootSaga","regenerator_default","a","wrap","_context","prev","next","takeLatest","stop","_marked","response","_context2","call","axios","get","sent","put","data","t0","console","log","_marked2","_context3","post","_marked3","_context4","all","_marked4","Calculator","num1","num2","operator","numberClick","num","event","currentNum1","_this","currentNum2","setState","operationClick","op","submitEquation","props","dispatch","clearInput","classes","this","react_default","createElement","TextField","id","className","input","value","concat","margin","width","variant","InputProps","readOnly","btnContainer","inlineBlock","Button","onClick","buttonNum","buttonOp","Component","connect","withStyles","theme","display","textAlign","backgroundColor","border","maxWidth","Submissions","runInterval","setInterval","clearInterval","resultsArray","map","sub","key","equation_id","equation","resultBox","blkBorder","App","components_Calculator","components_Submissions","sagaMiddleware","createSagaMiddleware","middlewareList","storeInstance","createStore","applyMiddleware","apply","run","ReactDOM","render","es","store","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f3da3c07.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n//called from sagas/index.js\nconst resultReducer = (state=[], action) => {\n   switch(action.type){\n      case 'RESULTS':\n         return action.payload\n      default:\n         return state\n   }\n}\n\n// These are what get referred to when using 'state' inside of the 'mapStateToProps' variable in the components\nconst rootReducer = combineReducers({\n   resultReducer\n});\n\nexport default rootReducer;","import axios from 'axios';\nimport { all } from 'redux-saga/effects';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\n//this function directs the dispatches that are called from the components\nfunction* catchDispatch() {\n   yield takeLatest('GET_RESULTS', getResults);\n   yield takeLatest('SUBMIT', submit);\n}\n\nfunction* getResults(action) {\n   try {\n       const response = yield call(axios.get, `/api/submissions/get-results`);\n       yield put({type: 'RESULTS', payload: response.data});\n   }\n   catch (error) {\n       console.log(`GET request to \"/api/submissions/get-results\" UNSUCCESSFUL: `, error);\n   }\n}\n\nfunction* submit(action) {\n   try {\n       yield call(axios.post, `/api/submissions/submit`, action.payload);\n       yield put({type: 'GET_RESULTS'});\n   }\n   catch (error) {\n       console.log(`POST request to \"/api/submissions/submit\" UNSUCCESSFUL: `, error);\n   }\n}\n\n// rootSaga is the primary saga\n// It bundles up all of the other sagas then is imported into sagas/index.js\nfunction* rootSaga() {\n   yield all([\n      catchDispatch()\n   ]);\n}\n\nexport default rootSaga","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst styling = theme => ({\n   inlineBlock: {\n      display: 'inlineBlock',\n   },\n   input: {\n      width: 350,\n      textAlign: 'center'\n   },\n   buttonNum: {\n      backgroundColor: 'lightgrey',\n      width: 80,\n      border: '1px solid black',\n      margin: '2px'\n   },\n   buttonOp: {\n      backgroundColor: 'palegoldenrod',\n      width: 80,\n      border: '1px solid black',\n      margin: '2px'\n   },\n   btnContainer: {\n      maxWidth: 350,\n      margin: '10px auto 50px auto'\n   }\n})\n\nclass Calculator extends Component {\n   \n   state = {\n      num1: '',\n      num2: '',\n      operator: ''\n   }\n\n   numberClick = (num) => {\n      return (event) => {\n         let currentNum1 = this.state.num1\n         let currentNum2 = this.state.num2\n         if(this.state.operator === ''){\n            this.setState({num1: currentNum1 += num})\n         }\n         else{\n            this.setState({num2: currentNum2 += num})\n         }\n      }\n   }\n\n   operationClick = (op) => {\n      return (event) => {\n         this.setState({operator: op})\n      }\n   }\n\n   submitEquation = () => {\n      this.props.dispatch({type: 'SUBMIT', payload: this.state})\n      this.clearInput()\n   }\n\n   clearInput = () => {\n      this.setState({\n         num1: '',\n         num2: '',\n         operator: ''\n      })\n   }\n \n   render() {\n      const {classes} = this.props\n      \n      return (\n         <div>\n            <h2>Live Calc</h2>\n            <TextField\n               id=\"input-display\"\n               className={classes.input}\n               value={`${this.state.num1} ${this.state.operator} ${this.state.num2}`}\n               margin=\"normal\"\n               width = \"700px\"\n               variant = 'outlined'\n               InputProps={{ readOnly: true }}\n            />\n            <div className={classes.btnContainer}>\n               <div className={classes.inlineBlock}>\n                  <Button onClick={this.numberClick('7')} className={classes.buttonNum}>7</Button>\n                  <Button onClick={this.numberClick('8')} className={classes.buttonNum}>8</Button>\n                  <Button onClick={this.numberClick('9')} className={classes.buttonNum}>9</Button>\n                  <Button onClick={this.operationClick('+')} className={classes.buttonOp}>+</Button>\n               </div>\n               <div className={classes.inlineBlock}>\n                  <Button onClick={this.numberClick('4')} className={classes.buttonNum}>4</Button>\n                  <Button onClick={this.numberClick('5')} className={classes.buttonNum}>5</Button>\n                  <Button onClick={this.numberClick('6')}className={classes.buttonNum}>6</Button>\n                  <Button onClick={this.operationClick('-')} className={classes.buttonOp}>-</Button>\n               </div>\n               <div className={classes.inlineBlock}>\n                  <Button onClick={this.numberClick('1')} className={classes.buttonNum}>1</Button>\n                  <Button onClick={this.numberClick('2')} className={classes.buttonNum}>2</Button>\n                  <Button onClick={this.numberClick('3')} className={classes.buttonNum}>3</Button>\n                  <Button onClick={this.operationClick('*')} className={classes.buttonOp}>*</Button>\n               </div>\n               <div className={classes.inlineBlock}>                \n                  <Button onClick={this.numberClick('.')} className={classes.buttonOp}>.</Button>\n                  <Button onClick={this.numberClick('0')} className={classes.buttonNum}>0</Button>\n                  <Button onClick={this.submitEquation} className={classes.buttonOp}>=</Button>\n                  <Button onClick={this.operationClick('/')} className={classes.buttonOp}>/</Button>\n                  <Button onClick={this.clearInput} className={classes.buttonOp}>C</Button>\n               </div>\n            </div>\n       </div>\n      )\n   }\n}\n\nconst mapStateToProps = state => ({\n   //userReducer: state.userReducer,\n});\n\nexport default connect(mapStateToProps)(withStyles(styling)(Calculator));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styling = theme => ({\n   resultBox: {\n      maxWidth: 500,\n      textAlign: 'center',\n      margin: '0px auto auto auto',\n      backgroundColor: 'lightgrey'\n   },\n   blkBorder: {\n      border: '2px solid black'\n   }\n})\n\nclass Submissions extends Component {\n   \n   componentDidMount(){\n      this.getResults()\n      this.runInterval = setInterval(() => this.getResults(),2000) \n   }\n   \n   componentWillUnmount(){\n      this.clearInterval(this.runInterval)\n   }\n\n   getResults(){\n      this.props.dispatch({type: 'GET_RESULTS'})\n   }\n \n   render() {\n      const {classes} = this.props\n      let resultsArray = this.props && this.props.resultReducer.length > 0 ?\n         this.props.resultReducer.map( sub => \n            <p key={sub.equation_id}>{sub.equation}</p>\n         ) : <span></span>\n\n      return (\n         <div>\n            <h3>User Submissions</h3>\n            <div className={`${classes.resultBox} ${classes.blkBorder}`}>\n               {resultsArray}\n            </div>\n         </div>\n      )\n   }\n}\n\nconst mapStateToProps = state => ({\n   resultReducer: state.resultReducer,\n});\n\nexport default connect(mapStateToProps)(withStyles(styling)(Submissions));","import React, {Component} from 'react';\nimport Calculator from './Calculator';\nimport Submissions from './Submissions';\nimport './App.css';\n\nclass App extends Component {\n   \n   \n   \n   \n   render(){\n      return(\n         <div className=\"App\">\n            <Calculator></Calculator>\n            <Submissions></Submissions>\n         </div>\n      );\n   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './redux/index';\nimport rootSaga from './sagas/index';\nimport App from './components/App';\n//imported fonts also go here Fonts\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all redux and saga middleware needed\n// redux-logger will only be added to the project if in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\n// connect reducers and any other middleware to the store\nconst storeInstance = createStore(\n  rootReducer,\n  applyMiddleware(...middlewareList)\n);\n\n// tells the saga middleware to use the rootSaga\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={storeInstance}> <App/> </Provider>, document.getElementById('react-root'),\n);"],"sourceRoot":""}